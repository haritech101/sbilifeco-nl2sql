services:
    metadata-storage:
        image: sbilife/metadata-storage:202508.14.1200
        restart: always
        environment:
            - MICROSERVICE_PORT=80
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_USERNAME=synmetrix
            - DB_PASSWORD=synmetrix
            - DB_NAME=synmetrix
            - AUTH_PROTO=http
            - AUTH_HOST=synmetrix
            - AUTH_PORT=8081
            - AUTH_USERNAME=demo@synmetrix.org
            - AUTH_PASSWORD=demodemo
            - AUTH_PATH=/auth/login
            - CUBE_HOST=synmetrix
            - CUBE_PORT=4000

        labels:
            - traefik.http.routers.metadata-storage.rule=PathPrefix(`/api/v1/db-metadata`)
            - traefik.http.services.metadata-storage.loadbalancer.server.url=http://metadata-storage
    vertex-llm:
        image: sbilife/vertex-llm:202510.10.1045
        restart: always
        environment:
            - HTTP_PORT=80
            - VERTEX_AI_REGION=us-east5
            - VERTEX_AI_PROJECT_ID=prj-uat-di-genai
            - VERTEX_AI_MODEL=claude-sonnet-4
            - GOOGLE_APPLICATION_CREDENTIALS=/usr/local/vertex-llm/service-key-for-vertex-ai.json
        volumes:
            - ./.local/service-key-for-vertex-ai.json:/usr/local/vertex-llm/service-key-for-vertex-ai.json
        labels:
            - traefik.http.routers.vertex-llm.rule=PathPrefix(`/api/v1/llm`)
            - traefik.http.services.vertex-llm.loadbalancer.server.url=http://vertex-llm
    sql-db:
        image: sbilife/alchemy:202509.23.1434
        restart: always
        environment:
            - HTTP_PORT=80
            - CONNECTION_STRING=postgresql+psycopg://demat_admin:d3m%4073r1%40l@dematerialised-data/dematerialised
            - SERVER_NAME=Relational Database Server
            - SERVER_INSTRUCTIONS=This MCP server points to a relational database. It will be used to access the database, mainly to run SQL queries
        labels:
            # Rule for HTTP
            - traefik.http.routers.sql-db-http.rule=PathPrefix(`/api/v1/sql-db`)
            # Rule for MCP
            - traefik.http.middlewares.sql-db-sanitise-mcp-path.replacepath.path=/mcp
            - traefik.http.routers.sql-db-mcp.rule=PathPrefix(`/mcp/sql-db`)
            - traefik.http.routers.sql-db-mcp.middlewares=sql-db-sanitise-mcp-path
            - traefik.http.services.sql-db.loadbalancer.server.url=http://sql-db
    session-data-manager:
        image: sbilife/session-data-manager:202508.14.0946
        restart: always
        environment:
            - REDIS_HOST=redis-for-sessions
        labels:
            - traefik.http.routers.llm.rule=PathPrefix(`/api/v1/session-data`)
            - traefik.http.services.llm.loadbalancer.server.url=http://session-data-manager
    query-flow:
        image: sbilife/query-flow:202510.13.0829
        restart: always
        environment:
            - MCP_SERVER_URL=http://sql-db/mcp
            - LLM_HOST=vertex-llm
            - METADATA_STORAGE_HOST=metadata-storage
            - SESSION_DATA_HOST=session-data-manager
            - PROMPTS_FILE=/app/prompt.txt
        volumes:
            - ./.local/prompt.txt:/app/prompt.txt
        labels:
            - traefik.http.routers.query-flow.rule=PathPrefix(`/api/v1/query-flow`)
            - traefik.http.services.query-flow.loadbalancer.server.url=http://query-flow
    traefik:
        image: traefik:3.4.1
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command:
            - --api.insecure=true
            - --providers.docker=true
        ports:
            - 11200:80
            - 11201:8080
    query-generator-ui:
        image: sbilife/query-generator-ui:202509.15.1000
        restart: always
        env_file: .local/query-generator-ui.env
        ports:
            - 11206:80
    redis:
        image: redis:7.0.0
        restart: always

    postgres:
        image: postgres:13
        restart: always
        volumes:
            - ./.local/.pg:/var/lib/postgresql/data
        env_file: .local/pg.env

    cubestore:
        image: cubejs/cubestore:v0.35.33
        restart: always
        env_file: .local/cube.env
        volumes:
            - ./.local/.cube:/cube/data

    synmetrix:
        image: synmetrix/stack:latest
        restart: always
        ports:
            - 11207:8888
            - 11208:4000
            - 11209:8081
        env_file: .local/synmetrix.env
    redis-for-sessions:
        image: redis:8.2.0
        restart: always
        volumes:
            - ./.local/.redis-for-sessions:/data
