services:
    metadata-storage:
        image: sbilife/metadata-storage:202508.14.1200
        restart: always
        env_file: .local/metadata-storage.env
        labels:
            - traefik.http.routers.metadata-storage.rule=PathPrefix(`/api/v1/db-metadata`)
    vertex-llm:
        image: sbilife/vertex-llm:202510.27.0915
        restart: always
        env_file: .local/vertex-llm.env
        volumes:
            - ./.local/service-key-for-vertex-ai.json:/usr/local/vertex-llm/service-key-for-vertex-ai.json
        labels:
            - traefik.http.routers.vertex-llm.rule=PathPrefix(`/api/v1/llm`)
    sql-db:
        image: sbilife/alchemy:202509.23.1434
        restart: always
        env_file: .local/sql-db.env
        labels:
            # Rule for HTTP
            - traefik.http.routers.sql-db-http.rule=PathPrefix(`/api/v1/sql-db`)
            # Rule for MCP
            - traefik.http.middlewares.sql-db-sanitise-mcp-path.replacepath.path=/mcp
            - traefik.http.routers.sql-db-mcp.rule=PathPrefix(`/mcp/sql-db`)
            - traefik.http.routers.sql-db-mcp.middlewares=sql-db-sanitise-mcp-path
    session-data-manager:
        image: sbilife/session-data-manager:202508.14.0946
        restart: always
        environment:
            - REDIS_HOST=redis-for-sessions
        labels:
            - traefik.http.routers.llm.rule=PathPrefix(`/api/v1/session-data`)
    query-flow:
        image: sbilife/query-flow:202510.13.0829
        restart: always
        environment:
            - MCP_SERVER_URL=http://sql-db/mcp
            - LLM_HOST=vertex-llm
            - METADATA_STORAGE_HOST=metadata-storage
            - SESSION_DATA_HOST=session-data-manager
            - PROMPTS_FILE=/app/prompt.txt
        volumes:
            - ./.local/prompt.txt:/app/prompt.txt
        labels:
            - traefik.http.routers.query-flow.rule=PathPrefix(`/api/v1/query-flow`)
    traefik:
        image: traefik:3.4.1
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command:
            - --api.insecure=true
            - --providers.docker=true
        ports:
            - 11200:80
            - 11201:8080
    query-generator-ui:
        image: sbilife/query-generator-ui:202510.28.1001
        restart: always
        env_file: .local/query-generator-ui.env
        ports:
            - 11206:80
        volumes:
            - ./.local/query-generator.vite.config.ts:/usr/local/query-generator-ui/vite.config.ts
        labels:
            - traefik.http.routers.query-ui.rule=PathPrefix(`/query-ui`)
            - traefik.http.routers.query-ui.middlewares=authentik@docker
    redis:
        image: redis:7.0.0
        restart: always

    postgres:
        image: postgres:13
        restart: always
        volumes:
            - ./.local/.pg:/var/lib/postgresql/data
        env_file: .local/pg.env

    cubestore:
        image: cubejs/cubestore:v0.35.33
        restart: always
        env_file: .local/cube.env
        volumes:
            - ./.local/.cube:/cube/data

    synmetrix:
        image: synmetrix/stack:latest
        restart: always
        ports:
            - 11207:8888
            - 11208:4000
            - 11209:8081
        env_file: .local/synmetrix.env
    redis-for-sessions:
        image: redis:8.2.0
        restart: always
        volumes:
            - ./.local/.redis-for-sessions:/data
    authentik-pgsql:
        image: postgres:16-alpine
        restart: always
        env_file: .local/authentik.env
        volumes:
            - .local/.authentik-pg:/var/lib/postgresql/data
    authentik-server:
        image: ghcr.io/goauthentik/server:2025.10.0
        restart: always
        command: server
        env_file: .local/authentik.env
        ports:
            - 11202:9000
        volumes:
            - .local/.authentik-media:/media
            - .local/.authentik-templates:/templates
    authentik-worker:
        image: ghcr.io/goauthentik/server:2025.10.0
        restart: always
        command: worker
        env_file: .local/authentik.env
        user: root
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./.local/.authentik-media:/media
            - ./.local/.authentik-templates:/templates
            - ./.local/.authetik-certs:/certs
    authentik-proxy:
        image: ghcr.io/goauthentik/proxy:2025.10.0
        ports:
            - 11203:9000
        env_file: .local/authentik-proxy.env
        labels:
            - traefik.http.routers.outpost.rule=PathPrefix(`/outpost.goauthentik.io/`)
            - traefik.http.middlewares.authentik.forwardauth.address=http://authentik-proxy:9000/outpost.goauthentik.io/auth/traefik
            - traefik.http.middlewares.authentik.forwardauth.trustForwardHeader=true
            - traefik.http.middlewares.authentik.forwardauth.authResponseHeaders=X-authentik-username
